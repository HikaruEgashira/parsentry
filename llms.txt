# llms.txt for vulnhuntrs

This file provides guidance for Large Language Models (LLMs) interacting with the vulnhuntrs codebase.

## Purpose

The goal is to help LLMs understand the project's structure, how it uses LLMs for security analysis, and how to best provide assistance or analyze the code.

## Core Concepts

Vulnhuntrs utilizes LLMs to automate the detection and analysis of security vulnerabilities in source code. Key aspects include:
- **Multi-stage Analysis**: Initial broad analysis followed by vulnerability-specific deep dives.
- **Structured Input/Output**: Prompts and responses adhere to specific templates and JSON schemas.
- **Contextual Awareness**: Analysis incorporates project-level context (README) and file-specific details.

## Guidance for LLMs

- **Focus**: Prioritize security analysis tasks, understanding vulnerability patterns, and interpreting analysis results.
- **Input/Output Format**: Refer to the detailed documentation for prompt structures and expected JSON output schemas. Adherence to the schema defined in `src/response.rs` (`response_json_schema()`) is crucial.
- **Code Understanding**: Pay attention to data flow, input handling, and interactions with external systems (filesystem, network, databases, command execution).
- **Contribute**: When asked to modify or extend functionality, consider the existing prompt templates (`src/prompts/`), response structures (`src/response.rs`), and analysis flow (`src/analyzer.rs`).

## Detailed Documentation Links

For more specific information, please refer to the following documents:

- **[Context Provisioning](./docs/llms/context.md)**: How project and file context is gathered and provided to the LLM.
- **[Prompt Engineering](./docs/llms/prompts.md)**: Details on system prompts, initial analysis prompts, vulnerability-specific prompts, and evaluation prompts.
- **[Response Schema](./docs/llms/response_schema.md)**: The expected JSON structure for LLM responses, including field descriptions.
- **[Security Patterns](./docs/llms/security_patterns.md)**: Regular expressions used to identify potentially risky code sections.
- **[Analysis Flow](./docs/llms/analysis_flow.md)**: The end-to-end process of how vulnhuntrs analyzes a file using LLMs.

*(Note: The linked documents above need to be created based on the project's implementation details found in the `src/` directory.)*
